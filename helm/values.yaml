mode: daemonset

image:
  repository: otel/opentelemetry-collector-contrib
  tag: latest
  
config:
  receivers:
    otlp:
      protocols:
        http:
          endpoint: 0.0.0.0:4318
        grpc:
          endpoint: 0.0.0.0:4317

  processors:
    batch: {}
    resource:
      attributes:
        - action: insert
          key: gcp.project.name
          value: observability-project-466314
    k8sattributes:
      auth_type: serviceAccount
      pod_association:
        - sources:
            - from: connection
      extract:
        metadata:
          - k8s.namespace.name
          - k8s.pod.name
          - k8s.node.name
          - k8s.container.name

  exporters:
    googlecloud:
      project: "observability-project-466314"
      metric:
        prefix: "custom.googleapis.com"
      log:
        default_log_name: opentelemetry.io/collector-exported-log
      trace:
        attribute_mappings: []
      user_agent: "otel-collector"
    debug:
      verbosity: detailed

  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [batch, resource, k8sattributes]
        exporters: [googlecloud, debug]
      metrics:
        receivers: [otlp]
        processors: [batch, resource, k8sattributes]
        exporters: [googlecloud, debug]
      logs:
        receivers: [otlp]
        processors: [batch, resource, k8sattributes]
        exporters: [googlecloud, debug]

# Use your GSA with Workload Identity
serviceAccount:
  create: true
  name: otel-collector-sa
  annotations:
    iam.gke.io/gcp-service-account: "gke-observability-sa@observability-project-466314.iam.gserviceaccount.com"

# DaemonSet settings
daemonset:
  enabled: true

# Update resources if needed
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

# Add tolerations if needed for node types
tolerations: []

# Add node selector if required
nodeSelector: {}
