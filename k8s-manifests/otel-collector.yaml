# 1. Namespace for OpenTelemetry Collector
apiVersion: v1
kind: Namespace
metadata:
  name: opentelemetry

---

# 2. Kubernetes ServiceAccount with GSA Binding (Workload Identity)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: opentelemetry
  annotations:
    iam.gke.io/gcp-service-account: gke-observability-sa@observability-project-466314.iam.gserviceaccount.com

---

# 3. Kubernetes RBAC for k8sattributes processor
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "namespaces"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector
subjects:
  - kind: ServiceAccount
    name: otel-collector
    namespace: opentelemetry

---

# 4. DaemonSet for OTEL Collector
# IMPORTANT: Removed hostNetwork and hostPort to allow standard Kubernetes service routing
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-collector
  namespace: opentelemetry
  labels:
    app: otel-collector
spec:
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccountName: otel-collector
      # Removed hostNetwork: true
      # Removed dnsPolicy: ClusterFirstWithHostNet (it's the default anyway)
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:latest
          args: ["--config=/conf/otel-config.yaml"]
          ports:
            - containerPort: 4317
              # Removed hostPort: 4317
              name: otlp-grpc
            - containerPort: 4318
              # Removed hostPort: 4318
              name: otlp-http
          volumeMounts:
            - name: config
              mountPath: /conf
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: otel-collector-config

# To allow your otel-collector pod to use sa-playground-poc-devops@...,
# you must explicitly bind the KSA to the GSA via IAM.
# use roles/iam.workloadIdentityUser
# For data use roles/logging.logWriter, roles/monitoring.metricWriter, roles/cloudtrace.agent

---
apiVersion: v1
kind: Service
metadata:
  name: otlp-daemon-service
  namespace: opentelemetry
spec:
  type: ClusterIP
  selector:
    app: otel-collector
  ports:
    - name: otlp-http
      port: 4318
      targetPort: 4318

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: opentelemetry
data:
  otel-config.yaml: |
    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:4318
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      batch:
      resource:
        attributes:
          - action: insert
            key: gcp.project.name
            value: observability-project
      k8sattributes:
        auth_type: serviceAccount
        extract:
          metadata: # extracted from the pod
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.node.name
            - k8s.container.name
        filter:
          namespace: internal-app


    exporters:
      googlecloud:
        project: "observability-project-466314" #prj-cams-playground-devopspoc
        metric:
          prefix: "custom.googleapis.com"
        log:
          default_log_name: opentelemetry.io/collector-exported-log
        trace:
          attribute_mappings: []  # default
        user_agent: "otel-collector"

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch, resource, k8sattributes]
          exporters: [googlecloud]
        metrics:
          receivers: [otlp]
          processors: [batch, resource, k8sattributes]
          exporters: [googlecloud]
        logs:
          receivers: [otlp]
          processors: [batch, resource, k8sattributes]
          exporters: [googlecloud]
